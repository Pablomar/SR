/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package scoreboard;

import java.util.List;
import java.util.stream.Collectors;

import scoreboard.entities.Game;
import scoreboard.entities.Team;
import scoreboard.exceptions.TeamAlreadyPlayingException;
import scoreboard.repositories.ScoreBoardMemoryRepository;
import scoreboard.services.ScoreBoardManagementService;
import scoreboard.services.ScoreBoardService;

public class ScoreBoard {

  private ScoreBoardService scoreBoardService;

  public ScoreBoard() {
    this.scoreBoardService = new ScoreBoardManagementService(new ScoreBoardMemoryRepository());
  }

  public Game startGame(Team homeTeam, Team awayTeam) throws TeamAlreadyPlayingException {
    return this.scoreBoardService.startGame(homeTeam, awayTeam);
  }

  public void finishGame(Game game) {
    this.scoreBoardService.finishGame(game.getHomeTeam(), game.getAwayTeam());
  }

  public void finishGame(Team homeTeam, Team awayTeam) {
    this.scoreBoardService.finishGame(homeTeam, awayTeam);
  }

  public void updateScore(Team homeTeam, Team awayTeam, int homeScore, int awayScore) {
    this.scoreBoardService.updateScore(homeTeam, awayTeam, homeScore, awayScore);
  }

  public void updateScore(Game game, int homeScore, int awayScore) {
    this.scoreBoardService.updateScore(game.getHomeTeam(), game.getAwayTeam(), homeScore, awayScore);
  }

  public List<Game> getSummary() {
    return this.scoreBoardService.getSummary();
  }

  public String getSumaryAsString() {
    return this.getSummary().stream().map(Object::toString).collect(Collectors.joining("\n"));
  }
}
